-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity reduce_ap_ufixed_4_Op_max_ap_ufixed_6_0_0_0_0_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    x_0_V_read : IN STD_LOGIC_VECTOR (5 downto 0);
    x_1_V_read : IN STD_LOGIC_VECTOR (5 downto 0);
    x_2_V_read : IN STD_LOGIC_VECTOR (5 downto 0);
    x_3_V_read : IN STD_LOGIC_VECTOR (5 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (5 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of reduce_ap_ufixed_4_Op_max_ap_ufixed_6_0_0_0_0_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;

    signal select_ln86_fu_40_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln86_reg_72 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal select_ln86_1_fu_54_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal select_ln86_1_reg_78 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln1496_fu_34_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_1_fu_48_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1496_2_fu_62_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln86_2_fu_66_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_ce_reg : STD_LOGIC;
    signal ap_return_int_reg : STD_LOGIC_VECTOR (5 downto 0);


begin




    ap_ce_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            ap_ce_reg <= ap_ce;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce_reg)) then
                ap_return_int_reg <= select_ln86_2_fu_66_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                select_ln86_1_reg_78 <= select_ln86_1_fu_54_p3;
                select_ln86_reg_72 <= select_ln86_fu_40_p3;
            end if;
        end if;
    end process;
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_return_assign_proc : process(select_ln86_2_fu_66_p3, ap_ce_reg, ap_return_int_reg)
    begin
        if ((ap_const_logic_0 = ap_ce_reg)) then 
            ap_return <= ap_return_int_reg;
        elsif ((ap_const_logic_1 = ap_ce_reg)) then 
            ap_return <= select_ln86_2_fu_66_p3;
        end if; 
    end process;

    icmp_ln1496_1_fu_48_p2 <= "1" when (unsigned(x_2_V_read) < unsigned(x_3_V_read)) else "0";
    icmp_ln1496_2_fu_62_p2 <= "1" when (unsigned(select_ln86_reg_72) < unsigned(select_ln86_1_reg_78)) else "0";
    icmp_ln1496_fu_34_p2 <= "1" when (unsigned(x_0_V_read) < unsigned(x_1_V_read)) else "0";
    select_ln86_1_fu_54_p3 <= 
        x_3_V_read when (icmp_ln1496_1_fu_48_p2(0) = '1') else 
        x_2_V_read;
    select_ln86_2_fu_66_p3 <= 
        select_ln86_1_reg_78 when (icmp_ln1496_2_fu_62_p2(0) = '1') else 
        select_ln86_reg_72;
    select_ln86_fu_40_p3 <= 
        x_1_V_read when (icmp_ln1496_fu_34_p2(0) = '1') else 
        x_0_V_read;
end behav;
